package leetcode_inta.leetcode801_850;

import java.util.HashMap;
import java.util.Map;

/**
 * @author inta
 * @date 2021/5/22
 * @describe 黑板上写着一个非负整数数组 nums[i] 。Alice 和 Bob 轮流从黑板上擦掉一个数字，Alice 先手。
 * 如果擦除一个数字后，剩余的所有数字按位异或运算得出的结果等于 0 的话，当前玩家游戏失败。
 *  (另外，如果只剩一个数字，按位异或运算得到它本身；如果无数字剩余，按位异或运算结果为 0。）
 * 换种说法就是，轮到某个玩家时，如果当前黑板上所有数字按位异或运算结果等于 0，这个玩家获胜。
 * 假设两个玩家每步都使用最优解，当且仅当 Alice 获胜时返回 true。
 * 示例：
 * 输入: nums = [1, 1, 2]
 * 输出: false
 * 解释:
 * Alice 有两个选择: 擦掉数字 1 或 2。
 * 如果擦掉 1, 数组变成 [1, 2]。剩余数字按位异或得到 1 XOR 2 = 3。
 * 那么 Bob 可以擦掉任意数字，因为 Alice 会成为擦掉最后一个数字的人，她总是会输。
 * 如果 Alice 擦掉 2，那么数组变成[1, 1]。剩余数字按位异或得到 1 XOR 1 = 0。Alice 仍然会输掉游戏。
 * 提示：
 * 1 <= N <= 1000
 * 0 <= nums[i] <= 2^16
 */
public class Q810xorGame {
    // 数组整体分为AB两块，A整体亦或结果0，B整体亦或结果非0，判断A和B(最少长度)奇偶性
    // 考虑需要取操作时：B为偶数时，判断A是否偶数，即判断整体是否为偶数；B为奇数时，判断A是否为奇数，即整体是否为偶数；
    // 不需要取操作时，即一开始就确定胜负，判断B是否为0
    // 题目引导成求数组可以亦或成结果为0的最长子序列长度
    // 可看题解似乎不用考虑那么复杂，整体亦或结果为0，就认为B长度为0；整体亦或非0，就认为它是B，A长度0，同上判断依据
    public boolean xorGame(int[] nums) {
        int sum = 0;
        for (int num : nums) {
            sum ^= num;
        }
        return sum == 0 || nums.length % 2 == 0;
    }
}
